version: '3.7'

services:
  # Apache, php 5.6
  ap56:
    build:
      context: ../images/apache-2.4_php-5.6/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/apache_php:2.4_5.6
    container_name: ap56
    network_mode:   host
    restart:        unless-stopped

    environment:
      - TERM=xterm

    labels:
      - SERVICE_NAME=ap56

    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
      - /var/run/mysql:/var/lib/mysql
      - ${DOCKER_ROOT}/apache/sites-enabled:/etc/httpd/sites-enabled
      - ${DOCKER_ROOT}/log/ap56:/var/log/httpd

    logging:
      driver: journald
      options:
        tag: ap56

    ports:
      - 8056:8056
  # End Apache, php 5.6

  # Apache, php 7.0
  ap70:
    build:
      context: ../images/apache-2.4_php-7.0/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/apache_php:2.4_7.0
    container_name: ap70
    network_mode:   host
    restart:        unless-stopped

    environment:
      - TERM=xterm

    labels:
      - SERVICE_NAME=ap70

    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
      - /var/run/mysql:/var/lib/mysql
      - ${DOCKER_ROOT}/apache/sites-enabled:/etc/httpd/sites-enabled
      - ${DOCKER_ROOT}/log/ap70:/var/log/httpd

    logging:
      driver: journald
      options:
        tag: ap70

    ports:
      - 8070:8070
  # End Apache, php 7.0

  # Apache, php 7.1
  ap71:
    build:
      context: ../images/apache-2.4_php-7.1/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/apache_php:2.4_7.1
    container_name: ap71
    network_mode:   host
    restart:        unless-stopped

    environment:
      - TERM=xterm

    labels:
      - SERVICE_NAME=ap71

    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
      - /var/run/mysql:/var/lib/mysql
      - ${DOCKER_ROOT}/apache/sites-enabled:/etc/httpd/sites-enabled
      - ${DOCKER_ROOT}/log/ap71:/var/log/httpd

    logging:
      driver: journald
      options:
        tag: ap71

    ports:
      - 8071:8071
  # End Apache, php 7.1

  # Apache, php 7.2
  ap72:
    build:
      context: ../images/apache-2.4_php-7.2/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/apache_php:2.4_7.2
    container_name: ap72
    network_mode:   host
    restart:        unless-stopped

    environment:
      - TERM=xterm

    labels:
      - SERVICE_NAME=ap72

    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
      - /var/run/mysql:/var/lib/mysql
      - ${DOCKER_ROOT}/apache/sites-enabled:/etc/httpd/sites-enabled
      - ${DOCKER_ROOT}/log/ap72:/var/log/httpd

    logging:
      driver: journald
      options:
        tag: ap72

    ports:
      - 8072:8072
  # End Apache, php 7.2

  # Apache, php 7.3
  ap73:
    build:
      context: ../images/apache-2.4_php-7.3/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/apache_php:2.4_7.3
    container_name: ap73
    network_mode:   host
    restart:        unless-stopped

    environment:
      - TERM=xterm

    labels:
      - SERVICE_NAME=ap73

    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
      - /var/run/mysql:/var/lib/mysql
      - ${DOCKER_ROOT}/apache/sites-enabled:/etc/httpd/sites-enabled
      - ${DOCKER_ROOT}/log/ap73:/var/log/httpd

    logging:
      driver: journald
      options:
        tag: ap73

    ports:
      - 8073:8073
  # End Apache, php 7.3

  # Tengine
  nginx:
    build:
      context: ../images/tengine-2.2.3/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/tengine:2.2.3
    container_name: nginx
    network_mode:   host
    restart:        unless-stopped

    environment:
      - TERM=xterm

    labels:
      - SERVICE_NAME=nginx

    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
      - ${DOCKER_ROOT}/nginx/sites-enabled:/etc/nginx/sites-enabled
      - ${DOCKER_ROOT}/letsencrypt:/etc/letsencrypt
      - ${DOCKER_ROOT}/log/nginx:/var/log/nginx
      - ${DOCKER_ROOT}/log/letsencrypt:/var/log/letsencrypt

    logging:
      driver: journald
      options:
        tag: nginx

    ports:
      - 80:80
      - 443:443
  # End Tengine

  # MariaDB
  mysql:
    build:
      context: ../images/mariadb-10.3/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/mariadb:10.3
    container_name: mysql
    network_mode:   host
    restart:        unless-stopped

    environment:
      - TERM=xterm
      - MYSQL_USER
      - MYSQL_MAX_CONNECTIONS
      - MYSQL_RUN_BEFORE

    labels:
      - SERVICE_NAME=mysql

    logging:
      driver: journald
      options:
        tag: mysql

    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/mysql:/var/run/mysql
      - /tmp:/tmp
      - ${DOCKER_ROOT}/mysql:/etc/my.cnf.d
      - ${DOCKER_ROOT}/mysql_db:/var/lib/mysql
      - ${DOCKER_ROOT}/log/mysql:/var/log/mysql

    ports:
      - 3306:3306
  # End MariaDB

  # vsftpd
  vsftpd:
    build:
      context: ../images/vsftpd-3.0.2/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/vsftpd:3.0.2
    container_name: vsftpd
    network_mode:   host
    restart:        unless-stopped
    init:           true

    environment:
      - TERM=xterm

    labels:
      - SERVICE_NAME=vsftpd

    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/shadow:/etc/shadow:ro
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
      - ${DOCKER_ROOT}/vsftpd:/etc/vsftpd
      - ${DOCKER_ROOT}/log/vsftpd:/var/log/vsftpd

    logging:
      driver: journald
      options:
        tag: vsftpd

    ports:
      - 21:21
  # End vsftpd

  # Fail2Ban
  fail2ban:
    build:
      context: ../images/fail2ban-0.10.4/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/fail2ban:0.10.4
    container_name: fail2ban
    network_mode:   host
    privileged:     true
    restart:        unless-stopped

    environment:
      - TERM=xterm

    labels:
      - SERVICE_NAME=fail2ban

    logging:
      driver: journald
      options:
        tag: fail2ban

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /lib/modules:/lib/modules
      - /var/log:/var/log
      - ${DOCKER_ROOT}/log/fail2ban:/var/log/fail2ban
      - ${DOCKER_ROOT}/log/nginx:/var/log/nginx:ro
      - ${DOCKER_ROOT}/log/ap56:/var/log/httpd56:ro
      - ${DOCKER_ROOT}/log/ap70:/var/log/httpd70:ro
      - ${DOCKER_ROOT}/log/ap71:/var/log/httpd71:ro
      - ${DOCKER_ROOT}/log/ap72:/var/log/httpd72:ro
      - ${DOCKER_ROOT}/log/ap73:/var/log/httpd73:ro

    depends_on:
      - nginx
      # - ap56
      # - ap70
      # - ap71
      # - ap72
      # - ap73
  # End Fail2Ban

  # Consul
  consul:
    build:
      context: ../images/consul-1.4.2/
      args:
        - http_proxy
        - https_proxy

    image:          alexeysofree/consul:1.4.2
    container_name: consul
    network_mode:   host
    restart:        unless-stopped
    init:           true

    environment:
      - TERM=xterm
      # - CONSUL_ADVERTISE_PUBLIC_IP=10
      - CONSUL_ADVERTISE_FIRST_IP
      # - DEBUG=1

    command: -server -ui
    # command: -server -ui -bootstrap
    # command: -server -ui -advertise=\'{{ GetInterfaceIP \"eth0\" }}\'
    # command: -server -ui -bootstrap -advertise=\'{{ GetInterfaceIP \"eth0\" }}\'

    labels:
      - SERVICE_NAME=consul

    logging:
      driver: journald
      options:
        tag: consul

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_ROOT}/consul/data:/etc/consul/data
      - ${DOCKER_ROOT}/consul/config:/etc/consul/config

    ports:
      - 8300:8300               # Server RPC    (Default 8300). This is used by servers to handle incoming requests from other agents. TCP only.
      - 8301:8301               # Serf LAN      (Default 8301). This is used to handle gossip in the LAN. Required by all agents. TCP and UDP.
      - 8301:8301/udp
      - 8302:8302               # Serf WAN      (Default 8302). This is used by servers to gossip over the WAN to other servers. TCP and UDP.
      - 8302:8302/udp
      - 127.0.0.1:8500:8500     # HTTP API      (Default 8500). This is used by clients to talk to the HTTP API. TCP only.
      - 127.0.0.1:8600:8600     # DNS Interface (Default 8600). Used to resolve DNS queries. TCP and UDP.
      - 127.0.0.1:8600:8600/udp
  # End Consul

  # Registrator
  registrator:
    image:          gliderlabs/registrator:latest
    container_name: registrator
    network_mode:   host
    restart:        unless-stopped

    environment:
      - TERM  =xterm

    command: consul://127.0.0.1:8500

    labels:
      - SERVICE_NAME=registrator

    logging:
      driver: journald
      options:
        tag: registrator

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/tmp/docker.sock

    depends_on:
      - consul
  # End Registrator
